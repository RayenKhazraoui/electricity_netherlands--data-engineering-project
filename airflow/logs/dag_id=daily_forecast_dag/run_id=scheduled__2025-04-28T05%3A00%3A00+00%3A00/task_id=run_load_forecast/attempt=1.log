[2025-04-29T06:10:21.049+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: daily_forecast_dag.run_load_forecast scheduled__2025-04-28T05:00:00+00:00 [queued]>
[2025-04-29T06:10:21.068+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: daily_forecast_dag.run_load_forecast scheduled__2025-04-28T05:00:00+00:00 [queued]>
[2025-04-29T06:10:21.068+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 1
[2025-04-29T06:10:21.099+0000] {taskinstance.py:2191} INFO - Executing <Task(PythonOperator): run_load_forecast> on 2025-04-28 05:00:00+00:00
[2025-04-29T06:10:21.118+0000] {standard_task_runner.py:60} INFO - Started process 90 to run task
[2025-04-29T06:10:21.128+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'daily_forecast_dag', 'run_load_forecast', 'scheduled__2025-04-28T05:00:00+00:00', '--job-id', '90', '--raw', '--subdir', 'DAGS_FOLDER/historical_predictions_dag.py.py', '--cfg-path', '/tmp/tmpameyruey']
[2025-04-29T06:10:21.130+0000] {standard_task_runner.py:88} INFO - Job 90: Subtask run_load_forecast
[2025-04-29T06:10:21.236+0000] {task_command.py:423} INFO - Running <TaskInstance: daily_forecast_dag.run_load_forecast scheduled__2025-04-28T05:00:00+00:00 [running]> on host 58c0d1847783
[2025-04-29T06:10:21.347+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='daily_forecast_dag' AIRFLOW_CTX_TASK_ID='run_load_forecast' AIRFLOW_CTX_EXECUTION_DATE='2025-04-28T05:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2025-04-28T05:00:00+00:00'
[2025-04-29T06:10:23.382+0000] {warnings.py:109} WARNING - /home/***/.local/lib/python3.8/site-packages/xgboost/core.py:158: UserWarning: [06:10:23] WARNING: /workspace/src/collective/../data/../common/error_msg.h:80: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  warnings.warn(smsg, UserWarning)

[2025-04-29T06:10:23.395+0000] {logging_mixin.py:188} INFO - Index(['hour', 'day_of_week', 'month', 'is_weekend', 'is_holiday', 'T',
       'heating_degree', 'cooling_degree', 'timestamp'],
      dtype='object')
[2025-04-29T06:10:24.085+0000] {logging_mixin.py:188} INFO - âœ… Data upserted successfully!
[2025-04-29T06:10:24.095+0000] {python.py:201} INFO - Done. Returned value was: None
[2025-04-29T06:10:24.105+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=daily_forecast_dag, task_id=run_load_forecast, execution_date=20250428T050000, start_date=20250429T061021, end_date=20250429T061024
[2025-04-29T06:10:24.163+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2025-04-29T06:10:24.185+0000] {taskinstance.py:3280} INFO - 0 downstream tasks scheduled from follow-on schedule check
